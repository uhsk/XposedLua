ext.runAllatori = { variant ->
    copy {
        from "$projectDir/allatori.xml"
        into "$buildDir/intermediates/classes/"
        expand(
            projectRoot: "${projectDir}",
            classesRoot: variant.javaCompileProvider.get().destinationDir,
            kotlinRoot: "${buildDir}/tmp/kotlin-classes/${variant.name}",
            androidJar: "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar",
            classpathJars: variant.javaCompileProvider.get().classpath.getAsPath(),
            logFile: "allatori-log-${variant.name}.xml"
        )
        rename('allatori.xml', "allatori-${variant.name}.xml")
    }

    new File("${variant.javaCompileProvider.get().destinationDir}-obfuscated").deleteDir()
    new File("${buildDir}/tmp/kotlin-classes/${variant.name}-obfuscated").deleteDir()

    javaexec {
        main = 'com.allatori.Obfuscate'
        classpath = files("$rootDir/allatori/allatori.jar")
        args "$buildDir/intermediates/classes/allatori-${variant.name}.xml"
    }

    new File("${variant.javaCompileProvider.get().destinationDir}").deleteDir()
    new File("${variant.javaCompileProvider.get().destinationDir}-obfuscated").renameTo(new File("${variant.javaCompileProvider.get().destinationDir}"))

    new File("${buildDir}/tmp/kotlin-classes/${variant.name}").deleteDir()
    new File("${buildDir}/tmp/kotlin-classes/${variant.name}-obfuscated").renameTo(new File("${buildDir}/tmp/kotlin-classes/${variant.name}"))
}
